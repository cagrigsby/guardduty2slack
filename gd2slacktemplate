AWSTemplateFormatVersion: 2010-09-09
Description: >-
  The template Installs a Lambda function that writes GuardDuty Events to a
  Slack incoming web hook. This relies on you creating an *incoming web hook* in
  your slack account and simply encrypting and using this as an environment
  variable. Once this template is installed, you must scroll to environment
  variables inside the lamda function, enable helpers, and encrypt the
  kmsEncryptedHookUrl. Alternatively remove encryption from the function.
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Slack Configuration
        Parameters:
          - IncomingWebHookURL
    ParameterLabels:
      IncomingWebHookURL:
        default: Slack Incoming Web Hook URL
Parameters:
  IncomingWebHookURL:
    Default: 'hooks.slack.com/services/XXXXXX/YYYYY/REPLACE_WITH_YOURS'
    Description: YourIncoming Web Hook URL from slack service starting with hooks
    Type: String
Resources:
  GuardDutyToSlackRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /service-role/
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: 'kms:*'
                Resource:
                  - 'arn:aws:kms:*'
  ScheduledRule:
    DependsOn: gd2slack
    Type: 'AWS::Events::Rule'
    Properties:
      Description: GuardDutyRule
      State: ENABLED
      EventPattern:
        source:
          - aws.guardduty
        detail-type:
          - GuardDuty Finding
      Targets:
        - Arn: !GetAtt 
            - gd2slack
            - Arn
          Id: GuardDutyFunction
  LambdaInvokePermission:
    DependsOn:
      - gd2slack
      - ScheduledRule
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      Principal: events.amazonaws.com
      FunctionName: !GetAtt 
        - gd2slack
        - Arn
      SourceArn: !GetAtt 
        - ScheduledRule
        - Arn
  gd2slack:
    Type: 'AWS::Lambda::Function'
    Properties:
      Code:
        S3Bucket:                    #you must enter your s3 bucket
        S3Key:                       #you must enter your s3key. This is the name of the function, likely gd2slack.zip and it should end in .zip
      Description: Send GuardDuty findings to Slack
      FunctionName: GuardDutyToSlack
      Handler: lambda_function.lambda_handler
      Role: !GetAtt 
        - GuardDutyToSlackRole
        - Arn
      Environment:
        Variables:
          kmsEncryptedHookUrl: !Ref IncomingWebHookURL
      Runtime: python3.7
